<?php

namespace backend\components\exporters;

use backend\components\Common;
use Yii;

class FacebookMacro extends Facebook {

    private $_posts;
    protected $_images;
    public $list_id;
    public $random_cta;
    public $page_id;

    const zip_folder = 'macros';

    public function add_post($post)
    {
        $post->text = $this->literal_lines($post->text);

        if($post->scheduled_time)
        {
            if(isset($post->image_filename0) && $post->image_filename0 != '' && $post->link == '')
            {
                $this->_posts[] = $this->add_image_post($post);
            }
            else
            {
                $this->_posts[] = $this->add_text_post($post);
            }
        }
    }

    private function literal_lines($text)
    {
        return str_replace(array("\r\n", "\r", "\n"), '\n', $text);
    }

    public function fixPostText($text)
    {
        $text = str_replace('"', '\\"', $text);
        return $text;
    }
    
    /**
     * DEPRECATED: iMacros code generated by this function no longer works.
     * @param mixed $post 
     * @return mixed
     */
    public function add_text_post_DEPRECATED($post)
    {
        $scheduled_time_parts = $this->format_timestamp($post->scheduled_time);
        $form_action = '/ajax/updatestatus.php*';

        $macro = '\'Text Post
            SET !ERRORIGNORE YES
            SET !TIMEOUT_STEP 15
            TAG POS=1 TYPE=A ATTR=data-endpoint:/ajax/composerx/attachment/status/*
            '.$this->add_delay(2,2).'
            SET !TIMEOUT_STEP 5';

        //very clever way of making this into a link post on Facebook!
        if(isset($post->link) && $post->link != '')
        {
            $macro .= '
                TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message CONTENT="' . $this->fixPostText($post->text) . ' - ' . $post->link . '"
                TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message_text CONTENT="' . $this->fixPostText($post->text) . ' - ' . $post->link . '"
                '.$this->add_delay(1,1).'
                TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message CONTENT="' . $this->fixPostText($post->text) . '"
                TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message_text CONTENT="' . $this->fixPostText($post->text) . '"
            ';
        }
        else
        {
            $macro .= '
            TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message CONTENT="' . $this->fixPostText($post->text) . '"
            TAG POS=1 TYPE=TEXTAREA FORM=ACTION:/ajax/updatestatus.php* ATTR=NAME:xhpc_message_text CONTENT="' . $this->fixPostText($post->text) . '"';
        }

        if(strstr($post->text, 'http://') || strstr($post->text, 'https://'))
        {
            /*
            //this sort of 'refreshes' the status box so that the link is recognized by facebook, seems to work fine.
            $macro .= '
                WAIT SECONDS=3.'.rand(1,9).'
                SET !TIMEOUT_STEP 60
                TAG POS=1 TYPE=A ATTR=data-endpoint:/ajax/composerx/attachment/media/chooser/*
                WAIT SECONDS=1.'.rand(1,9).'
                SET !TIMEOUT_STEP 60
                TAG POS=1 TYPE=A ATTR=data-endpoint:/ajax/composerx/attachment/status/*
                WAIT SECONDS=5.'.rand(1,9).'
            ';
            */
        }
        $macro .= '
            WAIT SECONDS=1.'.rand(1,9).'
            SET !TIMEOUT_STEP 10
            '.$this->add_delay(1,1).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:'.$form_action.' ATTR=NAME:future_date CONTENT=' . $scheduled_time_parts['month'] . '/' . $scheduled_time_parts['day'] . '/' . $scheduled_time_parts['year'] . '
            SET !TIMEOUT_STEP 1
            '.$this->add_delay(1,1).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:'.$form_action.' ATTR=NAME:future_time CONTENT=' . (($scheduled_time_parts['hour'] * 60 * 60) + ($scheduled_time_parts['minute'] * 60)) . '
            '.$this->add_delay(1,1).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:'.$form_action.' ATTR=NAME:scheduled CONTENT=1
            '.$this->add_delay(1,1).'
            SET !TIMEOUT_STEP 15
            TAG XPATH="//form[contains(@action, ' . "'/ajax/updatestatus.php'" . ")][last()]//button[contains(., 'Publish')]" . '"
            '.$this->add_delay(2,2).'
            REFRESH
        ';

        return $macro;
    }
    
    /**
     * DEPRECATED: iMacros code generated by this function no longer works.
     * @param mixed $post 
     * @return mixed
     */
    public function add_image_post_DEPRECATED($post)
    {
        $scheduled_time_parts = $this->format_timestamp($post->scheduled_time);
        $this->add_image($post->id, $post->image_filename0);
        if($post->image_filename1 != '')
        {
            $this->add_image($post->id . 1, $post->image_filename1);
            $additional_images .= '
            TAG POS=2 TYPE=INPUT:FILE FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:composer_unpublished_photo[] CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename1 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        if($post->image_filename2 != '')
        {
            $this->add_image($post->id . 2, $post->image_filename2);
            $additional_images .= '
            TAG POS=3 TYPE=INPUT:FILE FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:composer_unpublished_photo[] CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename2 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        if($post->image_filename3 != '')
        {
            $this->add_image($post->id . 3, $post->image_filename3);
            $additional_images .= '
            TAG POS=3 TYPE=INPUT:FILE FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:composer_unpublished_photo[] CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename3 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        $post = '
            \'Image Post
            WAIT SECONDS=3
            SET !ERRORIGNORE YES
            SET !TIMEOUT_STEP 15
            TAG POS=1 TYPE=A ATTR=data-endpoint:/ajax/composerx/attachment/media/chooser/*
            '.$this->add_delay(1,1).'
            SET !TIMEOUT_STEP 15
            TAG POS=1 TYPE=DIV ATTR=TXT:Upload<SP>Photos/Video
            '.$this->add_delay(2,2).'
            SET !TIMEOUT_STEP 3
            TAG POS=1 TYPE=INPUT:FILE FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:composer_unpublished_photo[] CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename0 . '"
            '.$this->add_delay(3,3).'
            '.$additional_images.'
            TAG POS=1 TYPE=INPUT:FILE FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:file1 CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename0 . '"
            '.$this->add_delay(6,6).'
            TAG POS=1 TYPE=TEXTAREA FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:xhpc_message CONTENT="' . $this->fixPostText($post->text) . '"
            TAG POS=1 TYPE=TEXTAREA FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:xhpc_message_text CONTENT="' . $this->fixPostText($post->text) . '"
            '.$this->add_delay(2,2).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:future_date CONTENT=' . $scheduled_time_parts['month'] . '/' . $scheduled_time_parts['day'] . '/' . $scheduled_time_parts['year'] . '
            '.$this->add_delay(1,1).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:future_time CONTENT=' . (($scheduled_time_parts['hour'] * 60 * 60) + ($scheduled_time_parts['minute'] * 60)) . '
            '.$this->add_delay(1,1).'
            TAG POS=1 TYPE=INPUT FORM=ACTION:*://upload.facebook.com/media/upload/photos/composer/* ATTR=NAME:scheduled CONTENT=1'
            .$this->add_delay(1,1).'
            SET !TIMEOUT_STEP 15
            TAG XPATH="//form[contains(@action, ' . "'//upload.facebook.com/media/upload/photos/composer/'" . ")][last()]//button[contains(., 'Publish')]" . '"
            WAIT SECONDS=2
        ';
        return $post;
    }

    /* adds a single facebook page post to the macro */
    public function add_text_post($post)
    {
        $scheduled_time_parts = $this->format_timestamp($post->scheduled_time);
        $postText = isset($post->link) && $post->link != '' ? $this->fixPostText($post->text) . ' - ' . $post->link : $this->fixPostText($post->text) . ' ';
        $macro = '
            \'Text Post
            WAIT SECONDS=3
            SET !ERRORIGNORE YES
            SET !TIMEOUT_STEP 15
            EVENT TYPE=CLICK XPATH="//a[@role=\'tab\' and @aria-label=\'Status\' and .=\'Status\']" BUTTON=0
            '.$this->add_delay(1,1).'
            \' FILL-IN STATUS/POST MESSAGE
            EVENT TYPE=CLICK XPATH="//div[@data-block=\'true\'][last()]" BUTTON=0
            EVENTS TYPE=KEYPRESS XPATH="//div[@data-block=\'true\'][last()]" CHARS="' . $postText . '"
            \' CLICK OTHER ELEMENT AND RE-CLICK THE STATUS TEXTBOX TO MAKE SURE THAT THE KEYPRESS HANDLER IS INVOKED!!
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            EVENT TYPE=CLICK XPATH="//div[@data-block=\'true\'][last()]" BUTTON=0
            \' EXPAND SCHEDULE DROPDOWN
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            \' EXTRACT DROPDOWN BUTTON\'S ID, WE WILL USE THIS TO FIND THE "Schedule" DROPDOWN MENU ITEM
            SET !EXTRACT NULL
            SET !EXTRACT_TEST_POPUP NO
            TAG XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" EXTRACT=HTM
            SET !VAR1 EVAL("var regex = /\\sid=\"(.*?)\"/g;var result=regex.exec(\"{{!EXTRACT}}\"); result.length > 0 ? result[1] : \"\";")
            \' CLICK "Schedule" MENU ITEM TO OPEN DIALOG BOX
            EVENT TYPE=CLICK XPATH="//div[@data-ownerid=\'{{!VAR1}}\']//ul[@role=\'menu\']/li[@role=\'presentation\']/a[@role=\'menuitem\' and .=\'Schedule\'][last()]" BUTTON=0
            \' FILL-IN SCHEDULE DATA
            TAG XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@placeholder=\'mm/dd/yyyy\']" CONTENT=""
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@placeholder=\'mm/dd/yyyy\']" CHARS="' . $scheduled_time_parts['month'] . '/' . $scheduled_time_parts['day'] . '/' . $scheduled_time_parts['year'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'hours\']" CHARS="' . $scheduled_time_parts['hour'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'minutes\']" CHARS="'. $scheduled_time_parts['minute'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'AM/PM\']" CHARS="' . $scheduled_time_parts['meridiem'] . '"
            SET !TIMEOUT_STEP 15
            \' SUBMIT
            EVENT TYPE=CLICK XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//button[@type=\'submit\' and .=\'Schedule\'][last()]" BUTTON=0
            ';
        return $macro;
    }
    
    /* adds a single facebook page post to the macro */
    public function add_image_post($post)
    {
        $scheduled_time_parts = $this->format_timestamp($post->scheduled_time);
        $this->add_image($post->id, $post->image_filename0);
        if($post->image_filename1 != '')
        {
            $this->add_image($post->id . 1, $post->image_filename1);
            $additional_images .= '
            TAG POS=1 TYPE=INPUT:FILE ATTR=NAME:composer_photo CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename1 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        if($post->image_filename2 != '')
        {
            $this->add_image($post->id . 2, $post->image_filename2);
            $additional_images .= '
            TAG POS=1 TYPE=INPUT:FILE ATTR=NAME:composer_photo CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename2 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        if($post->image_filename3 != '')
        {
            $this->add_image($post->id . 3, $post->image_filename3);
            $additional_images .= '
            TAG POS=1 TYPE=INPUT:FILE ATTR=NAME:composer_photo CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename3 . '"
            '.$this->add_delay(3,3).'
            ';
        }
        $post = '
            \'Image Post
            WAIT SECONDS=3
            SET !ERRORIGNORE YES
            SET !TIMEOUT_STEP 15
            TAG POS=2 TYPE=SPAN ATTR=TXT:Photo<SP>/<SP>Video
            '.$this->add_delay(1,1).'
            SET !TIMEOUT_STEP 3
            TAG POS=1 TYPE=INPUT:FILE ATTR=NAME:composer_photo CONTENT="' . addslashes(Yii::$app->user->identity->getSetting('macro_path')) . $post->image_filename0 . '"
            '.$this->add_delay(3,3).'
            '.$additional_images.'
            \' FILL-IN STATUS/POST MESSAGE
            EVENT TYPE=CLICK XPATH="//div[@data-block=\'true\'][last()]" BUTTON=0
            EVENTS TYPE=KEYPRESS XPATH="//div[@data-block=\'true\'][last()]" CHARS="' . $this->fixPostText($post->text) . '"
            \' CLICK OTHER ELEMENT AND RE-CLICK THE STATUS TEXTBOX TO MAKE SURE THAT THE KEYPRESS HANDLER IS INVOKED!!
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            EVENT TYPE=CLICK XPATH="//div[@data-block=\'true\'][last()]" BUTTON=0
            \' EXPAND SCHEDULE DROPDOWN
            EVENT TYPE=CLICK XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" BUTTON=0
            \' EXTRACT DROPDOWN BUTTON\'S ID, WE WILL USE THIS TO FIND THE "Schedule" DROPDOWN MENU ITEM
            SET !EXTRACT NULL
            SET !EXTRACT_TEST_POPUP NO
            TAG XPATH="//button[@type=\'submit\' and .=\'Publish\']/following-sibling::div/button[@type=\'submit\']" EXTRACT=HTM
            SET !VAR1 EVAL("var regex = /\\sid=\"(.*?)\"/g;var result=regex.exec(\"{{!EXTRACT}}\"); result.length > 0 ? result[1] : \"\";")
            \' CLICK "Schedule" MENU ITEM TO OPEN DIALOG BOX
            EVENT TYPE=CLICK XPATH="//div[@data-ownerid=\'{{!VAR1}}\']//ul[@role=\'menu\']/li[@role=\'presentation\']/a[@role=\'menuitem\' and .=\'Schedule\'][last()]" BUTTON=0
            \' FILL-IN SCHEDULE DATA
            TAG XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@placeholder=\'mm/dd/yyyy\']" CONTENT=""
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@placeholder=\'mm/dd/yyyy\']" CHARS="' . $scheduled_time_parts['month'] . '/' . $scheduled_time_parts['day'] . '/' . $scheduled_time_parts['year'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'hours\']" CHARS="' . $scheduled_time_parts['hour'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'minutes\']" CHARS="'. $scheduled_time_parts['minute'] . '"
            EVENTS TYPE=KEYPRESS XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//input[@role=\'spinbutton\' and @aria-label=\'AM/PM\']" CHARS="' . $scheduled_time_parts['meridiem'] . '"
            SET !TIMEOUT_STEP 15
            \' SUBMIT
            EVENT TYPE=CLICK XPATH="//div[@role=\'dialog\' and not(ancestor::div[contains(concat(\' \', normalize-space(@class), \' \'), \' hidden_elem \')])]//button[@type=\'submit\' and .=\'Schedule\'][last()]" BUTTON=0
            ';
        return $post;
    }
    
    private function format_timestamp($timestamp)
    {

        //current time in our timezone
        //if(!$timezone = Yii::$app->user->identity->getSetting('timezone'))
        //{
        //    $timezone = 'America/Los_Angeles';
        //}
        $date_object = new \DateTime();
        $date_object->setTimestamp($timestamp);
        //$date_object->setTimezone(new \DateTimeZone($timezone));

        if($timestamp)
        {
            //now
            $fields = array(
                'year' => $date_object->format('Y'),  // yyyy
                'month' => $date_object->format('m'), // mm
                'day' => $date_object->format('d'),   // dd
                'hour' => $date_object->format('h'),  // hh
                'minute' => str_replace('00', '0', $date_object->format('i')),
                'meridiem' => $date_object->format('A'),      // AM or PM
            );
            return $fields;
        }
        return [];
    }

    /* Take image from STREAM URL to image array and download it in temp directory */
    public function add_image($id, $image)
    {
        $this->_images[$id] = $image;
    }

    private function add_delay($start, $end)
    {
        if(Yii::$app->user->identity->getSetting('macro_speed') == -2) // VERY SLOW
            $delay = '
            WAIT SECONDS=' . rand($start * 3, $end * 3) . '.' . rand(1,9) . '';
        elseif(Yii::$app->user->identity->getSetting('macro_speed') == -1) // SLOW
            $delay = '
            WAIT SECONDS=' . rand($start * 2, $end * 2) . '.' . rand(1,9) . '';
        elseif(Yii::$app->user->identity->getSetting('macro_speed') == 0) // NORMAL
            $delay = '
            WAIT SECONDS=' . rand($start, $end) . '.' . rand(1,9) . '';

        return $delay;
    }

    /* Only used internally by self::create_zip() */
    public function merge_posts()
    {
        if(is_array($this->_posts))
        {
            $macro = '';
            $i = 0;
            foreach($this->_posts as $v)
            {
                $i++;
                if($i == rand(10,18))
                {
                    $macro .= $this->add_delay(22, 39);
                    $i = 0;
                }
                $macro .= $v;
            }
        }
        //on the very last post, lets remove the
        //TAG POS=1 TYPE=A ATTR=TXT:Close
        $macro = Common::str_lreplace('TAG POS=1 TYPE=A ATTR=TXT:Close', '', $macro);
        return $macro;
    }

    public function create_automated_macro()
    {
        $script = <<<EOF
function ajax(url, callbackFunction) {
    const XMLHttpRequest = Components.Constructor("@mozilla.org/xmlextras/xmlhttprequest;1");
    var request = XMLHttpRequest();
    request.open("GET", url, false);
    request.setRequestHeader("Content-Type",
      "application/x-www-form-urlencoded");

    request.onreadystatechange = function() {
      var done = 4, ok = 200;
      if (request.readyState == done && request.status == ok) {
        if (request.responseText) {
          callbackFunction(request.responseText);
        }
      }
    };
    request.send();
}

var getComplete = function (text) {
    lines = text.split("\r\n");
    lines1 = lines.join('\n');
    iimPlay("CODE:" + lines1);
}

iimDisplay("Postradamus Started...");

ajax('http://localhost/fbpostbot3/index.php?r=export/get-macro-text', getComplete);

iimDisplay("Postradamus Completed.");
EOF;
        return $script;
    }

}